{
  "openapi": "3.0.1",
  "info": {
    "title": "Maia Backend API",
    "version": "v1"
  },
  "paths": {
    "/authentication/start-otp": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Initiates the OTP (One-Time Password) authentication process by sending an OTP to the specified phone number.",
        "requestBody": {
          "description": "The request containing the phone number to send the OTP to.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StartOtpRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StartOtpRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StartOtpRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OTP sent successfully. Returns the request ID for verification."
          },
          "400": {
            "description": "Failed to send OTP to the specified phone number."
          }
        }
      }
    },
    "/authentication/validate-otp": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Validates the OTP code and authenticates the user if the code is correct.",
        "requestBody": {
          "description": "The request containing the OTP request ID, OTP code, and phone number.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateOtpRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateOtpRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateOtpRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OTP validated successfully. Returns authentication token with portal information."
          },
          "400": {
            "description": "Invalid OTP code, or user has no associated portals."
          }
        }
      }
    },
    "/authentication/logout": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Logs out the authenticated user by invalidating their current session.",
        "requestBody": {
          "description": "The logout request containing options for logout scope (current session or all sessions).",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LogoutRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LogoutRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LogoutRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User logged out successfully."
          },
          "400": {
            "description": "Invalid session or authentication token."
          }
        }
      }
    },
    "/clients": {
      "get": {
        "tags": [
          "Client"
        ],
        "summary": "Retrieves all clients available to the authenticated user.",
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of clients.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Client"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Client"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Client"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/clients/{id}": {
      "get": {
        "tags": [
          "Client"
        ],
        "summary": "Retrieves detailed information about a specific client by their ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the client.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the client information.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              }
            }
          },
          "404": {
            "description": "Client not found."
          }
        }
      },
      "patch": {
        "tags": [
          "Client"
        ],
        "summary": "Updates an existing client's information with the provided data.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the client to update.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "The client data to update (only non-null fields will be updated).",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchClient"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchClient"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PatchClient"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Client updated successfully."
          },
          "404": {
            "description": "Client not found."
          }
        }
      }
    },
    "/clients/{id}/events": {
      "get": {
        "tags": [
          "Client"
        ],
        "summary": "Retrieves all events associated with a specific client.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the client.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the client events.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientEvent"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientEvent"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientEvent"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Client not found."
          }
        }
      }
    },
    "/contact-details": {
      "get": {
        "tags": [
          "ContactDetail"
        ],
        "summary": "Retrieves all contact details for the authenticated user's portal.",
        "responses": {
          "200": {
            "description": "Successfully retrieved contact details.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContactDetail"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContactDetail"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContactDetail"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error occurred while retrieving contact details."
          }
        }
      },
      "post": {
        "tags": [
          "ContactDetail"
        ],
        "summary": "Creates a new contact detail with the provided information.",
        "requestBody": {
          "description": "The contact detail data to create.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateContactDetailRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateContactDetailRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateContactDetailRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContactDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactDetail"
                }
              }
            }
          },
          "201": {
            "description": "Contact detail created successfully."
          },
          "400": {
            "description": "Error occurred while creating the contact detail."
          }
        }
      }
    },
    "/contact-details/{id}": {
      "get": {
        "tags": [
          "ContactDetail"
        ],
        "summary": "Retrieves a specific contact detail by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the contact detail.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the contact detail.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContactDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactDetail"
                }
              }
            }
          },
          "404": {
            "description": "Contact detail not found."
          },
          "400": {
            "description": "Error occurred while retrieving the contact detail."
          }
        }
      },
      "put": {
        "tags": [
          "ContactDetail"
        ],
        "summary": "Updates an existing contact detail with the provided information.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the contact detail to update.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "The updated contact detail data.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateContactDetailRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateContactDetailRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateContactDetailRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Contact detail updated successfully."
          },
          "404": {
            "description": "Contact detail not found."
          },
          "400": {
            "description": "Error occurred while updating the contact detail."
          }
        }
      },
      "delete": {
        "tags": [
          "ContactDetail"
        ],
        "summary": "Deletes a contact detail by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the contact detail to delete.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Contact detail deleted successfully."
          },
          "404": {
            "description": "Contact detail not found."
          },
          "400": {
            "description": "Error occurred while deleting the contact detail."
          }
        }
      }
    },
    "/contact-details/active": {
      "get": {
        "tags": [
          "ContactDetail"
        ],
        "summary": "Retrieves contact details that are currently active based on their contact time windows.",
        "responses": {
          "200": {
            "description": "Successfully retrieved active contact details.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContactDetail"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContactDetail"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContactDetail"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error occurred while retrieving active contacts."
          }
        }
      }
    },
    "/languages": {
      "get": {
        "tags": [
          "Language"
        ],
        "summary": "Retrieves all available languages in the system.",
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of languages.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Language"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Language"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Language"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/me": {
      "get": {
        "tags": [
          "Me"
        ],
        "summary": "Retrieves the current authenticated user's profile information including account details, portal associations, and portal information.",
        "responses": {
          "200": {
            "description": "Successfully retrieved the user's profile information.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MeResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MeResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MeResponse"
                }
              }
            }
          },
          "404": {
            "description": "Account not found."
          }
        }
      },
      "patch": {
        "tags": [
          "Me"
        ],
        "summary": "Updates the current authenticated user's profile information.",
        "requestBody": {
          "description": "The profile data to update (only non-null fields will be updated).",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMeDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMeDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMeDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Profile updated successfully."
          },
          "404": {
            "description": "Account or account portal relationship not found."
          }
        }
      }
    },
    "/organisations/fix-unknown-client": {
      "post": {
        "tags": [
          "Organisation"
        ],
        "summary": "Fixes an unknown client association by linking them to the correct client and portal.",
        "requestBody": {
          "description": "The request containing client and portal information to fix the unknown client association.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FixUnknownClientRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FixUnknownClientRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FixUnknownClientRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Unknown client fixed successfully."
          },
          "404": {
            "description": "Incorrect client or portal specified."
          }
        }
      }
    },
    "/organisations/suggest-unknown-client": {
      "post": {
        "tags": [
          "Organisation"
        ],
        "summary": "Uses AI to suggest the most likely client match for an unknown caller based on phone call summary.",
        "requestBody": {
          "description": "The phone call information including summary to analyze for client matching.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhoneCall"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PhoneCall"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PhoneCall"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully found a suggested client match."
          },
          "404": {
            "description": "No suitable client suggestion found."
          }
        }
      }
    },
    "/phone-calls": {
      "get": {
        "tags": [
          "PhoneCall"
        ],
        "summary": "Retrieves phone calls within a specified date range, optionally filtered by client ID.",
        "parameters": [
          {
            "name": "after",
            "in": "query",
            "description": "The start date for filtering phone calls.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "before",
            "in": "query",
            "description": "The end date for filtering phone calls.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "clientId",
            "in": "query",
            "description": "Optional client ID to filter phone calls for a specific client.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved phone calls.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PhoneCallViewModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PhoneCallViewModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PhoneCallViewModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/phone-calls/{id}": {
      "get": {
        "tags": [
          "PhoneCall"
        ],
        "summary": "Retrieves a specific phone call by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the phone call.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the phone call.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PhoneCallViewModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PhoneCallViewModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PhoneCallViewModel"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Phone call not found."
          }
        }
      }
    },
    "/phone-calls/{id}/requests": {
      "get": {
        "tags": [
          "PhoneCall"
        ],
        "summary": "Retrieves all client requests associated with a specific phone call.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the phone call.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved client requests.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientRequestViewModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientRequestViewModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientRequestViewModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/phone-calls/{id}/requests/{requestId}": {
      "patch": {
        "tags": [
          "PhoneCall"
        ],
        "summary": "Updates a specific client request associated with a phone call.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the phone call.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "requestId",
            "in": "path",
            "description": "The unique identifier of the client request to update.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "The patch data containing status and response updates.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchClientRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchClientRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PatchClientRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ClientRequestViewModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientRequestViewModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientRequestViewModel"
                }
              }
            }
          },
          "204": {
            "description": "Client request updated successfully."
          },
          "404": {
            "description": "Phone call or client request not found."
          }
        }
      }
    },
    "/phone-calls/{id}/transcript": {
      "get": {
        "tags": [
          "PhoneCall"
        ],
        "summary": "Retrieves the transcript of a phone call with properly ordered conversation lines.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the phone call.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the phone call transcript.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PhoneCallViewModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PhoneCallViewModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PhoneCallViewModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/phone-calls/stats/overview": {
      "get": {
        "tags": [
          "PhoneCall"
        ],
        "summary": "Retrieves statistical overview data for phone calls within a specified date range.",
        "parameters": [
          {
            "name": "after",
            "in": "query",
            "description": "The start date for the statistics period.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "before",
            "in": "query",
            "description": "The end date for the statistics period.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved phone call statistics overview.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PhoneCallStatsOverview"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhoneCallStatsOverview"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhoneCallStatsOverview"
                }
              }
            }
          }
        }
      }
    },
    "/phone-calls/stats/questions": {
      "get": {
        "tags": [
          "PhoneCall"
        ],
        "summary": "Retrieves statistics about the most frequently asked questions within a specified date range.",
        "parameters": [
          {
            "name": "after",
            "in": "query",
            "description": "The start date for the statistics period.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "before",
            "in": "query",
            "description": "The end date for the statistics period.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved question statistics.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PhoneCallSummaryStat"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PhoneCallSummaryStat"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PhoneCallSummaryStat"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/phone-calls/stats/requests": {
      "get": {
        "tags": [
          "PhoneCall"
        ],
        "summary": "Retrieves statistics about the most common client requests within a specified date range.",
        "parameters": [
          {
            "name": "after",
            "in": "query",
            "description": "The start date for the statistics period.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "before",
            "in": "query",
            "description": "The end date for the statistics period.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved request statistics.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PhoneCallSummaryStat"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PhoneCallSummaryStat"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PhoneCallSummaryStat"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/portals/{id}": {
      "get": {
        "tags": [
          "Portal"
        ],
        "summary": "Retrieves a specific portal by its ID. Access is restricted to the user's own portal.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the portal.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the portal information.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Portal"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Portal"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Portal"
                }
              }
            }
          },
          "401": {
            "description": "User does not have access to the specified portal."
          }
        }
      }
    },
    "/portals": {
      "get": {
        "tags": [
          "Portal"
        ],
        "summary": "Retrieves all portals available in the system for the authenticated user.",
        "responses": {
          "200": {
            "description": "Successfully retrieved all portals.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Portal"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Portal"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Portal"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/portals/{id}/import-clients": {
      "post": {
        "tags": [
          "Portal"
        ],
        "summary": "Imports clients to a specific portal using their Social Security Numbers (SSNs). Requires authentication and portal access.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the portal to import clients to.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "The request containing the list of SSNs to import.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportClientsAuthenticatedRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportClientsAuthenticatedRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ImportClientsAuthenticatedRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Clients imported successfully."
          },
          "400": {
            "description": "Invalid request or empty SSNs list."
          },
          "401": {
            "description": "User does not have access to the specified portal."
          }
        }
      }
    },
    "/portals/import-clients": {
      "post": {
        "tags": [
          "Portal"
        ],
        "summary": "Imports clients to a portal using SSNs with secret-based authentication. This is an anonymous endpoint for external integrations.",
        "requestBody": {
          "description": "The request containing SSNs, portal ID, and authentication secret.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportClientsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportClientsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ImportClientsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Clients imported successfully."
          },
          "400": {
            "description": "Invalid portal ID or empty SSNs list."
          },
          "404": {
            "description": "Invalid authentication secret."
          }
        }
      }
    },
    "/questionnaires": {
      "get": {
        "tags": [
          "Questionnaire"
        ],
        "summary": "Retrieves all questionnaires available in the system.",
        "responses": {
          "200": {
            "description": "Successfully retrieved all questionnaires.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Questionnaire"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Questionnaire"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Questionnaire"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Questionnaire"
        ],
        "summary": "Creates a new questionnaire with the specified name and description.",
        "requestBody": {
          "description": "The questionnaire creation data containing name and description.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateQuestionnaire"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateQuestionnaire"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateQuestionnaire"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Questionnaire created successfully.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Questionnaire"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Questionnaire"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Questionnaire"
                }
              }
            }
          }
        }
      }
    },
    "/questionnaires/{id}": {
      "get": {
        "tags": [
          "Questionnaire"
        ],
        "summary": "Retrieves detailed information about a specific questionnaire including its questions, answers, and associated clients.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the questionnaire.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the questionnaire details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/QuestionnareDetailed"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuestionnareDetailed"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuestionnareDetailed"
                }
              }
            }
          },
          "404": {
            "description": "Questionnaire not found."
          }
        }
      },
      "patch": {
        "tags": [
          "Questionnaire"
        ],
        "summary": "Updates the configuration settings of an existing questionnaire.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the questionnaire to update.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "The updated questionnaire configuration including retry settings and messaging.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateQuestionnaireDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateQuestionnaireDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateQuestionnaireDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Questionnaire updated successfully."
          },
          "404": {
            "description": "Questionnaire not found."
          }
        }
      }
    },
    "/questionnaires/{id}/questions": {
      "post": {
        "tags": [
          "Questionnaire"
        ],
        "summary": "Adds a new question to an existing questionnaire.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the questionnaire.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "The question data including position, type, prompt, and metadata.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateQuestion"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateQuestion"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateQuestion"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Question added successfully."
          }
        }
      }
    },
    "/questions/{questionId}": {
      "put": {
        "tags": [
          "Questionnaire"
        ],
        "summary": "Updates an existing question with new information.",
        "parameters": [
          {
            "name": "questionId",
            "in": "path",
            "description": "The unique identifier of the question to update.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "The updated question data including prompt, position, type, and metadata.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateQuestion"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateQuestion"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateQuestion"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Question updated successfully."
          }
        }
      },
      "delete": {
        "tags": [
          "Questionnaire"
        ],
        "summary": "Deletes a question from the system.",
        "parameters": [
          {
            "name": "questionId",
            "in": "path",
            "description": "The unique identifier of the question to delete.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Question deleted successfully."
          }
        }
      }
    },
    "/questionnaires/{id}/start-for-clients": {
      "post": {
        "tags": [
          "Questionnaire"
        ],
        "summary": "Starts a questionnaire survey for multiple clients with specified scheduling parameters.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the questionnaire to start.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "The list of client-specific survey start requests with scheduling details.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/StartQuestionnaireForClientRequest"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/StartQuestionnaireForClientRequest"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/StartQuestionnaireForClientRequest"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Questionnaire surveys scheduled successfully for all specified clients."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Account": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phonenumber": {
            "type": "string",
            "nullable": true
          },
          "memory": {
            "type": "string",
            "nullable": true
          },
          "language": {
            "type": "string",
            "nullable": true
          },
          "workingCity": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "AccountPortal": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "integer",
            "format": "int32"
          },
          "portalId": {
            "type": "integer",
            "format": "int32"
          },
          "emailDailySummary": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CallQuestionnaire": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "questionnaireId": {
            "type": "integer",
            "format": "int32"
          },
          "phoneCallId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "nextTryAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "Client": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "street": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "nullable": true
          },
          "about": {
            "type": "string",
            "nullable": true
          },
          "primaryNumber": {
            "type": "string",
            "nullable": true
          },
          "portalId": {
            "type": "integer",
            "format": "int32"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "nationalId": {
            "type": "string",
            "nullable": true
          },
          "acceptedTermsAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "totalCalls": {
            "type": "integer",
            "format": "int32"
          },
          "lastCallAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "callLengthInSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "callsLast7Days": {
            "type": "integer",
            "format": "int32"
          },
          "isUnknown": {
            "type": "boolean"
          },
          "memory": {
            "type": "string",
            "nullable": true
          },
          "isInactive": {
            "type": "boolean"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "language": {
            "type": "string",
            "nullable": true
          },
          "alfaECareDetails": {
            "type": "string",
            "nullable": true
          },
          "isCustomerService": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ClientEvent": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "type": {
            "$ref": "#/components/schemas/EventType"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "clientId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ClientRequestViewModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "request": {
            "type": "string",
            "nullable": true
          },
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "portalId": {
            "type": "integer",
            "format": "int32"
          },
          "phoneCallId": {
            "type": "integer",
            "format": "int32"
          },
          "phoneCallTranscriptLineId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "response": {
            "type": "string",
            "nullable": true
          },
          "respondedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "respondedByAccountId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "respondedBy": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ContactDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "portalId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "contactNumber": {
            "type": "string",
            "nullable": true
          },
          "contactEmail": {
            "type": "string",
            "nullable": true
          },
          "contactBetweenStart": {
            "type": "string",
            "format": "date-span"
          },
          "contactBetweenEnd": {
            "type": "string",
            "format": "date-span"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "isActive": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "contactWhenFinalOutpost": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CreateContactDetailRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "contactNumber": {
            "type": "string",
            "nullable": true
          },
          "contactEmail": {
            "type": "string",
            "nullable": true
          },
          "contactBetweenStart": {
            "type": "string",
            "format": "date-span"
          },
          "contactBetweenEnd": {
            "type": "string",
            "format": "date-span"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CreateQuestion": {
        "type": "object",
        "properties": {
          "position": {
            "type": "integer",
            "format": "int32"
          },
          "prompt": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "metadata": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateQuestionnaire": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EventType": {
        "enum": [
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "FixUnknownClientRequest": {
        "type": "object",
        "properties": {
          "phoneCallId": {
            "type": "integer",
            "format": "int32"
          },
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "primaryNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ImportClientsAuthenticatedRequest": {
        "type": "object",
        "properties": {
          "ssNs": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ImportClientsRequest": {
        "type": "object",
        "properties": {
          "ssNs": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "portalId": {
            "type": "integer",
            "format": "int32"
          },
          "secret": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Language": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LogoutRequest": {
        "type": "object",
        "properties": {
          "all": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "MeResponse": {
        "type": "object",
        "properties": {
          "account": {
            "$ref": "#/components/schemas/Account"
          },
          "accountPortals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountPortal"
            },
            "nullable": true
          },
          "portal": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Portal"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PatchClient": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "street": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "nullable": true
          },
          "language": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PatchClientRequestDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "nullable": true
          },
          "response": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PhoneCall": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "fromNumber": {
            "type": "string",
            "nullable": true
          },
          "toNumber": {
            "type": "string",
            "nullable": true
          },
          "summary": {
            "type": "string",
            "nullable": true
          },
          "uuid": {
            "type": "string",
            "nullable": true
          },
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "confidence": {
            "type": "integer",
            "format": "int32"
          },
          "confidenceReason": {
            "type": "string",
            "nullable": true
          },
          "satisfaction": {
            "type": "integer",
            "format": "int32"
          },
          "satisfactionReason": {
            "type": "string",
            "nullable": true
          },
          "purpose": {
            "type": "string",
            "nullable": true
          },
          "dynamicVariables": {
            "type": "string",
            "nullable": true
          },
          "connectedTo": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "conversationUuid": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PhoneCallStatsOverview": {
        "type": "object",
        "properties": {
          "successfullCallScore": {
            "type": "number",
            "format": "double"
          },
          "interestingSolutions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "topQuestions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PhoneCallSummaryStat": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PhoneCallTranscriptLine": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "by": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "phoneCallId": {
            "type": "integer",
            "format": "int32"
          },
          "category": {
            "$ref": "#/components/schemas/PhoneCallTranscriptLineCategory"
          }
        },
        "additionalProperties": false
      },
      "PhoneCallTranscriptLineCategory": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "PhoneCallViewModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "fromNumber": {
            "type": "string",
            "nullable": true
          },
          "toNumber": {
            "type": "string",
            "nullable": true
          },
          "summary": {
            "type": "string",
            "nullable": true
          },
          "uuid": {
            "type": "string",
            "nullable": true
          },
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "confidence": {
            "type": "integer",
            "format": "int32"
          },
          "confidenceReason": {
            "type": "string",
            "nullable": true
          },
          "satisfaction": {
            "type": "integer",
            "format": "int32"
          },
          "satisfactionReason": {
            "type": "string",
            "nullable": true
          },
          "purpose": {
            "type": "string",
            "nullable": true
          },
          "dynamicVariables": {
            "type": "string",
            "nullable": true
          },
          "connectedTo": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "conversationUuid": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "transcript": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhoneCallTranscriptLine"
            },
            "nullable": true
          },
          "isUnknown": {
            "type": "boolean"
          },
          "portalId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Portal": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "$ref": "#/components/schemas/PortalStatus"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "customerServicePhone": {
            "type": "string",
            "nullable": true
          },
          "supplierPhone": {
            "type": "string",
            "nullable": true
          },
          "provider": {
            "type": "string",
            "nullable": true
          },
          "alfaECareCompanyCode": {
            "type": "string",
            "nullable": true
          },
          "organisationId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PortalStatus": {
        "enum": [
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "Question": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "questionnaireId": {
            "type": "integer",
            "format": "int32"
          },
          "position": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "prompt": {
            "type": "string",
            "nullable": true
          },
          "metadata": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "QuestionWithAnswer": {
        "type": "object",
        "properties": {
          "questionId": {
            "type": "integer",
            "format": "int32"
          },
          "questionnaireCallId": {
            "type": "integer",
            "format": "int32"
          },
          "prompt": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "metadata": {
            "type": "string",
            "nullable": true
          },
          "answerText": {
            "type": "string",
            "nullable": true
          },
          "answeredAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Questionnaire": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "firstMessage": {
            "type": "string",
            "nullable": true
          },
          "retryIntervalDays": {
            "type": "integer",
            "format": "int32"
          },
          "maxTries": {
            "type": "integer",
            "format": "int32"
          },
          "intervalBackOffMultiplier": {
            "type": "integer",
            "format": "int32"
          },
          "repeatIntervalDays": {
            "type": "integer",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "QuestionnareDetailed": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "firstMessage": {
            "type": "string",
            "nullable": true
          },
          "retryIntervalDays": {
            "type": "integer",
            "format": "int32"
          },
          "maxTries": {
            "type": "integer",
            "format": "int32"
          },
          "intervalBackOffMultiplier": {
            "type": "integer",
            "format": "int32"
          },
          "repeatIntervalDays": {
            "type": "integer",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "questions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Question"
            },
            "nullable": true
          },
          "answers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuestionWithAnswer"
            },
            "nullable": true
          },
          "clients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CallQuestionnaire"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StartOtpRequest": {
        "type": "object",
        "properties": {
          "phoneNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StartQuestionnaireForClientRequest": {
        "type": "object",
        "properties": {
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "questionnaireId": {
            "type": "integer",
            "format": "int32"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "interval": {
            "type": "integer",
            "format": "int32"
          },
          "retries": {
            "type": "integer",
            "format": "int32"
          },
          "intervalBackOffMultiplier": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UpdateAccountDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phonenumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateAccountPortalDto": {
        "type": "object",
        "properties": {
          "emailDailySummary": {
            "type": "boolean"
          },
          "portalId": {
            "type": "integer",
            "format": "int32"
          },
          "accountId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UpdateContactDetailRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "contactNumber": {
            "type": "string",
            "nullable": true
          },
          "contactEmail": {
            "type": "string",
            "nullable": true
          },
          "contactBetweenStart": {
            "type": "string",
            "format": "date-span"
          },
          "contactBetweenEnd": {
            "type": "string",
            "format": "date-span"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UpdateMeDto": {
        "type": "object",
        "properties": {
          "account": {
            "$ref": "#/components/schemas/UpdateAccountDto"
          },
          "accountPortals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateAccountPortalDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateQuestion": {
        "type": "object",
        "properties": {
          "position": {
            "type": "integer",
            "format": "int32"
          },
          "prompt": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "metadata": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateQuestionnaireDto": {
        "type": "object",
        "properties": {
          "retryIntervalDays": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "maxTries": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "intervalBackOffMultiplier": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "repeatIntervalDays": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "firstMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ValidateOtpRequest": {
        "type": "object",
        "properties": {
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "requestId": {
            "type": "string",
            "nullable": true
          },
          "otp": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}